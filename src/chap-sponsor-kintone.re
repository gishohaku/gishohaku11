= ノーコードツールはSIエンジニアを求めている

//flushright{
サイボウズ株式会社 エンジニアリレーション部 DevRelチーム
//}

近年よく耳にするノーコードツールですが、プログラミングの知識がなくても簡単にシステムが作れる開発ツール、ということを知っている方は多いと思います。一方で食べたことのない味を想像できない異国のメニューのように、使い所や気をつけるべき点など実際のところはよくわからない、という方もいらっしゃるのではないでしょうか。  

ここではノーコードツールってどんな味？と思っている方向けに、ノーコード・ローコードツールであるkintone（キントーン）を提供しているサイボウズだからお伝えできる、ノーコードツールのお話をさせていただきます。



== ノーコードツールとは
まずはじめに、ノーコードツールとローコードツールの違いやその歴史、市場動向などを簡単に紹介します。

=== ノーコードとローコードの違い
ノーコードツールは、プログラムを1行も書かずにGUIだけでシステム、アプリケーションの作成ができます。これに対してローコードツールは、一部必要最小限のプログラミングを含む開発が発生し、API連携などによる機能拡張が可能になります。  

サイボウズのkintoneは、ノーコードツールとしてご利用頂くプランと、API連携やプラグインなどの機能拡張が利用できるノーコード・ローコードツールのプランがあります。この記事では、kintoneのノーコードツール部分に限ってお話いたします。

=== ノーコードツールの歴史
ここ数年話題になっているノーコードツールですが、今あるノーコードツールにつながる技術や考え方は半世紀前からありました。  

GUIだけでシステムが作れるようになる技術は、1960年代に誕生したGUIや第四世代言語（4GL）が始まりと言われています。また、プログラミングの知識がなくても開発ができるようにという考え方は、1982年に出版された『Application Development Without Programmers』の中で訴えていたことでした。  

その後、時代の状況に合わせてブームが起きたり、下火になった時期を経て、現在に至ります。  

=== ノーコード・ローコードツールの市場動向
昨今、ノーコード・ローコードツールの導入が広がっていることが、調査会社のレポートから見て取れます。ここでは2つの調査結果をご紹介します。  

アイ・ティ・アール（ITR）は、ノーコード・ローコード開発市場は、2021年の600億円から2026年には倍の1200億円規模になると予測し、成長市場であると発表しています。@<fn>{note1}  

またIDC Japanは2022年に、「2023年には新規アプリの60％がローコード・ノーコードで開発される」との予想を発表していました。@<fn>{note2} 

これらからノーコード・ローコードツールは、すます重要性を増し、一般化していく可能性が高いと考えられます。  


//footnote[note1][https://www.itr.co.jp/report-library/m-24000400]   
//footnote[note2][https://publickey1.jp/blog/22/202360idc_japan14.html]

=== なぜ今、ノーコードツールが脚光を浴びているのか
大きく2つの要因からノーコードツールの活用が広がっていると考えられます。

====  少⼦⾼齢化に伴う労働⼈⼝の減少  
労働人口が減ると、多くの企業で少ない人数で事業を回すために、システム化や⾃動化をする必要がでてきます。しかし、そのためのエンジニアの確保も人手不足により簡単ではありません。そこで、エンジニアでない現場の人間もシステムを構築、運用ができるようにしようという流れが生まれています。

==== 企業のDXへの取り組み
もう一つは、DX（デジタルトランスフォーメーション）の流れです。2018年12月に経済産業省が「企業がビジネス環境の激しい変化に対応し、データとデジタル技術を活用して、顧客や社会のニーズを基に、製品・サービス、ビジネスモデルを変革するとともに、業務そのものや、組織、プロセス、企業文化・風土を変革し、競争上の優位性を確立すること」と定義した「DX推進ガイドライン」を発表し、今では多くの企業で取り組みが始まっています。この文脈では、システムもビジネス環境の変化にスピーディーに対応することが求められますが、これまでのようなシステム開発では時間がかかりすぎてビジネスが進展しないという問題が発生します。その解決策の一つとして、業務のノウハウを反映しやすい内製、現場担当者が自らシステムを作るといったことにメリットを感じる企業が多くなっていると考えられます。

== 企業におけるノーコードツール導入のメリットと躓きポイント
ノーコード・ローコードツールの導⼊実績が着実に増えているという調査結果から、多くの企業が、ノーコード・ローコードツールにメリットを感じていると推測できます。では、なにを期待して導⼊し、その効果はどうか、反対にどのような問題が発生したかなどを、サイボウズのkintone@<fn>{kintone}を題材にご紹介します。   

//note[Kintoneとは]{
ITの知識がなくても自社の業務に合わせたアプリを作成でき、日々変化する業務にあわせた改良も簡単に素早くできる、ノーコード・ローコードツールです。主な機能として「データベース＋ワークフロー＋コミュニケーション」の特性があり、顧客管理、出張申請、業務日報など幅広い用途で活用できるため、現場主導の継続的な業務改善を実現します.

2024年2月末現在、東証プライム上場企業の3社に1社を含む、33,000社以上にご利用頂いています。  

製品サイト：https://kintone.cybozu.co.jp  

//}

=== ノーコードツールを導入するメリットとは
複数あるノーコードツール導入のメリットのうち、ここでは２つ取り上げます。

==== 開発スピードの向上とコスト削減
ノーコードツールを導入する企業にとって、システムの内製化による開発スピードの向上とコスト削減が最大の価値ではないでしょうか。外注する場合、SIerの担当者に業務を説明し、実現したいことを共有する必要がありますが、難易度も高く時間もかかります。結果的に意図した通りのシステムにならないという話もよく聞きます。一方ノーコードツールであれば、エンジニアでなくても、業務や自社の目指すところを理解している人が自分でシステムを作ることが可能になります。実際に、kintoneのお客様の中には、通常数ヶ月かかるようなシステム開発を数週間でカットオーバーできた、という事例@<fn>{note4}がたくさんあります。  

//footnote[note4][https://kintone-sol.cybozu.co.jp/cases/bals.html]

==== 現場担当者のエンゲージメントの向上
ノーコードツールの導入は、スピードやコストだけでなく、現場担当者の成長やモチベーション面でもメリットがあることがわかってきています。kintoneの例を上げると、短期間で「trial and error」を繰り返しながらシステムを構築でき、運用しながら改良を加えることも簡単なため、現場担当者が業務のシステム化を自分事として捉えやすくなります。業務にかかっていた工数や煩わしさが減っていく実感も持ちやすいため、業務改善へのモチベーションが上がる、主導している人は周りから感謝される経験を通してやりがいを感じて働けるようになる、といった副次的効果もありました。  

サイボウズでは「kintone hive」という導入担当者による導入事例を発表するイベントを開催しており、現場の方たちの体験を共有できる場を設けています。記事もありますのでユーザー体験に興味のある方は、ぜひ読んでみてください。  

「kintone hive」記事一覧：https://logmi.jp/communities/120

=== 非エンジニアがノーコードツールで躓くポイント
ノーコードツールは、GUIでシステムが開発できるため操作は非常に簡単です。しかし、入力項目やボタンを配置したり、現行の業務の流れをなぞるだけでは、運用に耐えうるシステムを作れない場合があります。

==== システム変更の影響範囲の想定
サイボウズ社内の非エンジニア部署で作ったkintoneアプリの例ですが、アプリを運用している最中に項目を追加し、その項目のデータを別のアプリと連携させるといった改修を行いました。この場合、項目を追加する前に登録されたレコードには、追加した項目にデータが入っていません。この影響を考慮できず、データを連携させた別アプリが想定の動作をしない、という問題が発生しました。kintoneは、業務の変更に合わせてアプリ項目も簡単に変更できることがメリットの一つですが、項目変更の影響範囲をエンジニアではない担当者が適切に洗い出すことは難しいです。

==== システムの全体構成や運用、保守への考慮
例で挙げたケースはデータに関する知識でしたが、全体の構成を考える事をしていないというケースもあり、利用者にとって使い勝手が良くなく、メンテナンスも困難なシステムができてしまうという問題も発生します。  

こうなると、せっかく低コストで業務ノウハウを反映したシステムをスピーディーに作るメリットを享受するためのノーコードツールも、その本領を発揮できません。本来であれば、日々変化するビジネス環境に合わせて事業を発展させていくエンジンともなるツールであるのに、逆に現場のメンバーの運用コストが上がりその担当者の本業に影響を与える可能性すらあります。

== ノーコードツールを導入する際にエンジニアに求められること
ここまで述べてきたようにノーコードツールの導入には、システム開発のスキルが不要であっても、プロの手助けは必要となるケースが多くあるということがわかります。今皆さまの頭にも、非エンジニアがノーコードでシステム構築する際に起きそうな問題が複数浮かんでいるのではないでしょうか。  

ここからは、今後も企業がシステム化、自動化やリプレイスなどの際にノーコードツールを検討するケースの増加が予想されるなか、システムの専門技術を持ったエンジニアには、どういうことが求められるようになるのか、kintoneの実例も交えてご紹介します。

=== システムの構成力や設計力
ノーコードツールを導入し運用するために直接的に必要となる支援は、主に設計になります。kintoneの構築案件でも、やりたことを形にする部分での相談が多く、サイボウズのSIパートナーの中には、システム構築ではなく伴走支援をメニュー化しているケースもあります。ここでポイントになるのは、お客様の理想、ゴールを共有したうえでどういうシステムを設計するということになります。目線をお客様と合わせ、一緒にゴールに向かうことに主軸をおくことで、信頼関係を築くことができるようになります。kintoneのお客様の中には、「SIer企業と二人三脚でDXを進めている」と表現される方もいらっしゃいます。こうしたお互いを理解し合うことで生まれる関係を築きやすいのも、お客様自身が手を動かしてシステムを作ることのできるノーコードツールの特徴ではないかと思います。

=== ノーコードツールの使いどころの判断力
ノーコードツールは機能が限定的であるため、利用が適切でない要件も必ず発生します。ノーコードツールの利用が良いのか他の選択肢が良いのか、といった判断もエンジニアでないと難しいケースがあり、ノーコードツール導入が成功しづらい状況を生む出す要因になりかねません。こういった場面において、該当のノーコードツールに精通したエンジニアが必要とされています。

=== ノーコードツールだけでは実現できない機能の開発力
ノーコードツールで対応できない部分については開発が発生し、SIerの対応となります。この場合にノーコードツールの範疇もわかっているエンジニアの方が、お客様が求めていることに合わせた提案ができるのではないでしょうか。実際にkintoneのお客様に、ノーコードで開発できる業務は内製化を進め、kintoneと他システムとの連携が必要であったり、複雑な処理が必要となるようなケースは外部のSIerに依頼するという棲み分けをし、必要なシステムを短期間でローンチできるようにした企業もありました。今後こういった企業も増えてくるのではないかと予想され、ノーコードツールの発展とともにノーコードツールをうまく活用するノウハウを持ったエンジニアの必要性も増してくるのではないかと考えています。

== おわりに
最後まで読んでいきただきありがとうございました。  

私たちは、企業がノーコードツールを効果的に活用するためには、エンジニアの力、システム開発のプロの力がとても重要だと考えています。今後ノーコード・ローコードツールを扱うエンジニアが増えることを願っています。  

この記事を読んで、ノーコードでできること、ローコードで機能を拡張するとどんな事ができるのかなど気になった方は、kintoneでお試しいただけると嬉しいです。  

kintoneの通常のお試し期間は1ヶ月ですが、開発者が無料で1年お試しのできる開発者ライセンスをご用意しています。開発者向けサイトでは、APIドキュメントやTipsなどを参照できます。  

興味を持ってくださった方がいらっしゃいましたら、ぜひアクセスしてみてください。  


//image[gisyohaku10_catalog-article_G][開発者向けサイトと開発者ライセンスへのリンク][scale=1]

kintoneの基本機能（ノーコード）で何ができるのか、動画での紹介もありますのでご活用ください。  
https://kintone.cybozu.co.jp/seminar/ondemand.html

//footnote[kintone][kintone]
